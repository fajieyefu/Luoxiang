package fajieyefu.com.luoxiang;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import fajieyefu.com.luoxiang.U8HrCt007;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table U8_HR_CT007.
*/
public class U8HrCt007Dao extends AbstractDao<U8HrCt007, Void> {

    public static final String TABLENAME = "U8_HR_CT007";

    /**
     * Properties of entity U8HrCt007.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property CcodeID = new Property(0, String.class, "ccodeID", false, "CCODE_ID");
        public final static Property Vdescription = new Property(1, String.class, "vdescription", false, "VDESCRIPTION");
        public final static Property VsimpleName = new Property(2, String.class, "vsimpleName", false, "VSIMPLE_NAME");
        public final static Property Ilevels = new Property(3, Integer.class, "ilevels", false, "ILEVELS");
        public final static Property CpCodeID = new Property(4, String.class, "cpCodeID", false, "CP_CODE_ID");
    };


    public U8HrCt007Dao(DaoConfig config) {
        super(config);
    }
    
    public U8HrCt007Dao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'U8_HR_CT007' (" + //
                "'CCODE_ID' TEXT," + // 0: ccodeID
                "'VDESCRIPTION' TEXT," + // 1: vdescription
                "'VSIMPLE_NAME' TEXT," + // 2: vsimpleName
                "'ILEVELS' INTEGER," + // 3: ilevels
                "'CP_CODE_ID' TEXT);"); // 4: cpCodeID
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'U8_HR_CT007'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, U8HrCt007 entity) {
        stmt.clearBindings();
 
        String ccodeID = entity.getCcodeID();
        if (ccodeID != null) {
            stmt.bindString(1, ccodeID);
        }
 
        String vdescription = entity.getVdescription();
        if (vdescription != null) {
            stmt.bindString(2, vdescription);
        }
 
        String vsimpleName = entity.getVsimpleName();
        if (vsimpleName != null) {
            stmt.bindString(3, vsimpleName);
        }
 
        Integer ilevels = entity.getIlevels();
        if (ilevels != null) {
            stmt.bindLong(4, ilevels);
        }
 
        String cpCodeID = entity.getCpCodeID();
        if (cpCodeID != null) {
            stmt.bindString(5, cpCodeID);
        }
    }

    /** @inheritdoc */
    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    /** @inheritdoc */
    @Override
    public U8HrCt007 readEntity(Cursor cursor, int offset) {
        U8HrCt007 entity = new U8HrCt007( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // ccodeID
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // vdescription
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // vsimpleName
            cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3), // ilevels
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4) // cpCodeID
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, U8HrCt007 entity, int offset) {
        entity.setCcodeID(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setVdescription(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setVsimpleName(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setIlevels(cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3));
        entity.setCpCodeID(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
     }
    
    /** @inheritdoc */
    @Override
    protected Void updateKeyAfterInsert(U8HrCt007 entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    /** @inheritdoc */
    @Override
    public Void getKey(U8HrCt007 entity) {
        return null;
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
